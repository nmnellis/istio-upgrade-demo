#jinja2: lstrip_blocks: "True"
{% set istio_version = item.key %}
{% set istio_revision = item.value.revision %}
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: ingress-gateway-[[ istio_revision ]]
  namespace: istio-gateways
spec:
  profile: empty
  # This value is required for Gloo Mesh Istio
  hub: gcr.io/istio-enterprise
  # This value can be any Gloo Mesh Istio tag
  tag: [[ istio_version ]]
  revision: [[ istio_revision]]
  components:
    ingressGateways:
      - name: istio-ingressgateway-[[ istio_revision ]]
        namespace: istio-gateways
        enabled: true
        label:
          istio: ingressgateway
          version: [[ istio_revision ]]
          app: istio-ingressgateway
          # matches spec.values.global.network in istiod deployment
          topology.istio.io/network: production-cluster-network
        k8s:
          hpaSpec:
            maxReplicas: 5
            metrics:
              - resource:
                  name: cpu
                  targetAverageUtilization: 60
                type: Resource
            minReplicas: 2
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-ingressgateway-[[ istio_revision ]]
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 40Mi
          service:
            # Since we created our own LoadBalanced service, tell istio to create a ClusterIP service for this gateway
            type: ClusterIP
            # match the LoadBalanced Service
            ports:
              - name: status-port
                port: 15021
                targetPort: 15021
              - name: http2
                port: 80
                targetPort: 8080
              - name: https
                port: 443
                targetPort: 8443
              - name: tcp
                port: 31400
                targetPort: 31400
              - name: tls
                port: 15443
                targetPort: 15443
  values:
    global:
      # needed for connecting VirtualMachines to the mesh
      network: production-cluster-network
      # needed for annotating istio metrics with cluster
      multiCluster:
        clusterName: production-cluster